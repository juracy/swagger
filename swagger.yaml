components:
  schemas:
    ErrorResponse:
      properties:
        error:
          type: string
      required:
      - error
      type: object
    FeedbackRequest:
      properties:
        component:
          maxLength: 255
          minLength: 1
          type: string
        email:
          maxLength: 100
          minLength: 1
          type: string
        localization:
          $ref: '#/components/schemas/Localization'
        message:
          maxLength: 500
          minLength: 1
          type: string
        portalRating:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        subject:
          enum:
          - sugestao
          - elogio
          - problema
          - duvida
          type: string
        url:
          format: url
          maxLength: 255
          minLength: 1
          type: string
        userAgent:
          maxLength: 255
          minLength: 1
          type: string
        vote:
          description: Voto entre 1 e 5
          format: int32
          maximum: 5
          minimum: 1
          type: integer
      required:
      - message
      - subject
      - url
      - userAgent
      - vote
      type: object
    FeedbackResponse:
      properties:
        feedbackId:
          format: int32
          type: integer
        message:
          minLength: 1
          type: string
      required:
      - feedbackId
      - message
      type: object
    Localization:
      properties:
        latitude:
          type: number
        longitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    RegisterTenantResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    ValidationResponse:
      properties:
        error:
          type: string
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      required:
      - error
      - errors
      type: object
info:
  title: Coletor do Feedback
  version: 1.0.0
openapi: 3.0.2
paths:
  /feedbacks:
    post:
      description: Registrar um feedback
      parameters:
      - description: Token com o tenant
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
        description: Payload do feedback
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponse'
          description: Dados do feedback registrado
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
          description: Payload incorreto
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Token inv\xE1lido ou vencido"
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
  /tenants/{name}:
    post:
      description: Registrar um feedback
      parameters:
      - description: Nome do tenant
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTenantResponse'
          description: Tenant encontrado e token retornado
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTenantResponse'
          description: Tenant adicionado com sucesso e token retornado
